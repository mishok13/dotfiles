---
- name: Provision OSX utilities and applications
  hosts: localhost
  become: false
  vars:
    brew_cask_packages:
      - font-cascadia-code
      - font-cascadia-code-pl
      - font-cascadia-mono
      - font-cascadia-mono-pl
      - font-fira-code
      - font-hack-nerd-font
      - font-inconsolata-lgc-nerd-font
      - font-meslo-lg-nerd-font
      - firefox
      - google-chrome
      - google-drive
      - iterm2
      - mactex
      - signal
      - slack
      - spotify
      - telegram
      - vlc
    brew_packages:
      # - age # User-friendly GPG tool
      # - ansible # Ansible itself
      # - awscli # AWS things
      # - act # Run GH actions locally
      # - bat # Better cat
      # - cabextract # Useful for older fonts ?
      # - checkov # Check your Terraform code
      # - colima # Docker in Mac. Check out orb stack maybe?
      # - coreutils # GNU tools
      # - cowsay # MOOOOOO
      # - csvkit # CSV tools
      # - d12frosted/emacs-plus/emacs-plus@29 # Alternatively emacs-mac
      # - direnv # asdf alternatively
      # - dive # dive into docker images, analyze layers
      # - docker
      # - docker-buildx
      # - docker-compose
      # - driftctl # No longer needed?
      # - dust # A better du
      # - envconsul # Access secrets from vault & consul
      # - eza # Better ls
      # - fd # Better find
      # - fzf # Makes shell more fun
      # - git
      # - glab
      # - glow
      # - gnupg
      # - go
      # - grep
      # - hadolint
      # - hatch
      # - hcloud
      # - helm
      # - htop
      # - httpie
      # - hunspell
      # - infracost
      # - ispell
      # - jq
      # - just
      # - oven-sh/bun/bun
      # - k3d
      # - k9s
      # - kubectx
      # - kubescape
      # - kubeseal
      # - kyverno
      # - lazydocker
      # - mycli
      # - nmap
      # - nvm
      # - openjdk
      # - parallel
      # - pdm
      # - pgcli
      # - podman
      # - poetry
      # - pre-commit
      # - pyenv
      # - pyright
      # - qrencode
      # - rancher-cli
      # - ripgrep
      # - ruff
      # - rustup-init
      # - sevenzip
      # - skaffold
      # - sops
      # - spotifyd
      # - stern
      # - syncthing
      # - tgenv
      # - terrascan
      # - tfenv
      # - tflint
      # - tfsec
      # - tfupdate
      # - tldr
      # - tmux
      # - tox
      # - trivy
      # - trufflehog
      # - vault
      # - watch
      # - yh
      # - yq
      # - zk
      - zola # Static site builder
      - eza # Better ls
      - fd # Better find
      - jq # JSON parser
      - fzf # fuzzy search in CLI
      - rg # ripgrep, better grep
      - zoxide # better cd?
      - d12frosted/emacs-plus/emacs-plus@29 # The only proper working homebrew version of emacs
      - pyenv # Handle Python versions
      - tfenv # Handle Terraform versions
      - direnv
  tasks:
    - name: Install Homebrew packages
      homebrew:
        name: '{{ brew_packages }}'
        state: present
        update_homebrew: yes
        upgrade: yes
      tags:
        - bootstrap
        - packages

    - name: Add homebrew taps
      community.general.homebrew_tap:
        name: railwaycat/emacsmacport,homebrew/cask-fonts,homebrew/cask-drivers
        state: present
      when: ansible_facts['system'] == "MacOS"
      tags:
        - bootstrap
        - packages

    - name: Install Cask packages
      homebrew_cask:
        name: '{{ item }}'
        state: present
      with_items: '{{ brew_cask_packages }}'
      when: ansible_facts['system'] == "MacOS"
      tags:
        - bootstrap

    - name: Update all packages
      homebrew:
        update_homebrew: yes
        upgrade_all: yes
      tags:
        - packages


    - name: Setup directory structure
      file:
        path: "{{ item }}"
        state: directory
      with_items:
        - "{{ lookup('env','HOME') }}/nonwork"
        - "{{ lookup('env','HOME') }}/work"
        - "{{ lookup('env','HOME') }}/.nvm"
        - "{{ lookup('env','HOME') }}/Library/Application Support/iTerm2/DynamicProfiles"

    - name: Check if .emacs.d exists
      stat: path="{{ lookup('env','HOME') }}/.emacs.d"
      register: emacsdir
      tags:
        - emacs

    - name: Check out Emacs config
      git:
        repo: 'git@github.com:mishok13/emacsen.git'
        dest: "{{ lookup('env','HOME') }}/nonwork/emacsen"
      tags:
        - emacs
      ignore_errors: true

    - name: Link .emacs.d to Emacs config
      file: path="{{ lookup('env','HOME') }}/.emacs.d"
            src="{{ lookup('env','HOME') }}/nonwork/emacsen"
            state=link
      when: emacsdir.stat.islnk is undefined or not emacsdir.stat.islnk
      tags:
        - emacs

    - name: Download Oh My Zsh installer
      get_url:
        url: https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh
        dest: /tmp/zsh.install.sh
        force: no
      register: zsh_installer
      tags:
        - download
        - zsh
    - name: Remove existing omz installation
      file:
        path: "{{ lookup('env','HOME') }}/.oh-my-zsh"
        state: absent
      tags:
        - zsh

    - name: Install omz
      command: "/bin/sh {{ zsh_installer.dest }}"
      tags:
        - zsh

    - name: Check out dotfiles
      git:
        repo: 'git@github.com:mishok13/dotfiles.git'
        dest: "{{ lookup('env','HOME') }}/nonwork/dotfiles"
      tags:
        - zsh
      ignore_errors: yes

    - name: Link .zshrc to dotfiles
      file:
        path: "{{ lookup('env','HOME') }}/.zshrc"
        src: "{{ lookup('env','HOME') }}/nonwork/dotfiles/.zshrc"
        state: link
        force: yes
      tags:
        - zsh

    - name: Install powerlevel10k
      git:
        repo: https://github.com/romkatv/powerlevel10k.git
        dest: "{{ lookup('env','HOME') }}/.oh-my-zsh/custom/themes/powerlevel10k"
        depth: 1
      tags:
        - zsh

    - name: Configure git
      file:
        path: "{{ lookup('env','HOME') }}/.gitconfig"
        src: "{{ lookup('env','HOME') }}/nonwork/dotfiles/gitconfig"
        state: link
        force: yes
      tags:
        - git

    - name: Configure ripgrep
      file:
        path: "{{ lookup('env','HOME') }}/.rgignore"
        src: "{{ lookup('env','HOME') }}/nonwork/dotfiles/rgignore"
        state: link
        force: yes
      tags:
        - ripgrep

    - name: Configure ripgrep
      file:
        path: "{{ lookup('env','HOME') }}/.ripgreprc"
        src: "{{ lookup('env','HOME') }}/nonwork/dotfiles/.ripgreprc"
        state: link
        force: yes
      tags:
        - ripgrep

    - name: Configure iterm2 profiles
      copy:
        src: ../iterm.profile.json
        dest: "{{ lookup('env','HOME') }}/Library/Application Support/iTerm2/DynamicProfiles/"
      tags:
        - iterm
    - name: Download iterm2 shell integration
      get_url:
        url: https://iterm2.com/shell_integration/zsh
        dest: "{{ lookup('env','HOME') }}/.iterm2_shell_integration.zsh"
      tags:
        - iterm


    - name: Install rustup components
      command: rustup component add rls

    - name: Setup automatic daily Homebrew package updates
      cron:
        name: "homebrew upgrade"
        minute: "5"
        hour: "12"
        job: "/opt/homebrew/bin/brew update >/dev/null 2>&1"
      tags:
        - cron
    - name: Setup automatic daily Homebrew Cask package updates
      cron:
        name: "homebrew cask upgrade"
        minute: "25"
        hour: "12"
        job: "/opt/homebrew/bin/brew upgrade >/dev/null 2>&1"
      tags:
        - cron
    - name: Setup automatic Rust toolchain upgrades
      cron:
        name: "Update Rust toolchain"
        minute: "12"
        hour: "06"
        job: "{{ lookup('env','HOME') }}/.cargo/bin/rustup update >/dev/null 2>&1"
      tags:
        - cron
