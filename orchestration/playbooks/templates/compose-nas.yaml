services:

  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "Etc/UTC"

    volumes:
      - "/mnt/media/movies/:/data/movies"
      - "/mnt/media/tv/:/data/tvshows"
      - "~/.config/jellyfin/:/config"
    ports:
      - 8096:8096
      - 8920:8920 #optional
      - 7359:7359/udp #optional
      - 1900:1900/udp #optional
    devices:
      - /dev/dri:/dev/dri
    restart: unless-stopped

  transmission:
    image: lscr.io/linuxserver/transmission:4.0.6-r0-ls256
    container_name: transmission
    restart: unless-stopped
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "Etc/UTC"
      USER: "admin"
      PASS: "admin"
    volumes:
      - "/mnt/media/downloads/:/downloads"
      - "/mnt/media/transmission/watch/:/watch"
      - "~/.config/transmission/:/config"
    ports:
      - "9091:9091"
      - "51413:51413"
      - "51413:51413/udp"

  sonarr:
    image: lscr.io/linuxserver/sonarr:4.0.9.2244-ls255
    restart: unless-stopped
    container_name: sonarr
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "Etc/UTC"
    volumes:
      - "~/.config/sonarr/:/config"
      - "/mnt/media/tv:/tv"
      - "/mnt/media/downloads:/downloads"
    ports:
      - 8989:8989

  radarr:
    image: lscr.io/linuxserver/radarr:5.11.0.9244-ls240
    container_name: radarr
    restart: unless-stopped
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "Etc/UTC"
    volumes:
      - "~/.config/radarr/:/config"
      - "/mnt/media/movies:/movies"
      - "/mnt/media/downloads:/downloads"
    ports:
      - 7878:7878

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:1.24.3.4754-ls88
    container_name: prowlarr
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "Etc/UTC"
    volumes:
      - "~/.config/prowlarr:/config"
    ports:
      - 9696:9696
    restart: unless-stopped

  nzbget:
    image: lscr.io/linuxserver/nzbget:24.3.20240927
    container_name: nzbget
    environment:
      PUID: "1000"
      PGID: "1000"
      TZ: "Etc/UTC"
      NZBGET_USER: "admin"
      NZBGET_PASS: "admin"
    volumes:
      - "~/.config/nzbget:/config"
      - "/mnt/media/downloads:/downloads"
    ports:
      - 6789:6789
    restart: unless-stopped

  immich-server:
    container_name: immich_server
    image: ghcr.io/immich-app/immich-server:v1.121.0
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - /mnt/media/immich:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    environment:
      DB_PASSWORD: "858675bbcdb5101c"
      DB_USERNAME: "postgres"
      DB_DATABASE_NAME: "immich"
      DB_HOSTNAME: "immich-db"
      REDIS_HOSTNAME: "immich-redis"
    ports:
      - '2283:2283'
    depends_on:
      - immich-redis
      - immich-db
    restart: always
    healthcheck:
      disable: false

  immich-machine-learning:
    container_name: immich_machine_learning
    image: ghcr.io/immich-app/immich-machine-learning:v1.121.0
    volumes:
      - model-cache:/cache
    restart: always
    healthcheck:
      disable: false

  immich-redis:
    container_name: immich_redis
    image: docker.io/redis:6.2-alpine@sha256:eaba718fecd1196d88533de7ba49bf903ad33664a92debb24660a922ecd9cac8
    healthcheck:
      test: redis-cli ping || exit 1
    restart: always

  immich-db:
    container_name: immich_postgres
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:90724186f0a3517cf6914295b5ab410db9ce23190a2d9d0b9dd6463e3fa298f0
    environment:
      POSTGRES_PASSWORD: "858675bbcdb5101c"
      POSTGRES_USER: postgres
      POSTGRES_DB: immich
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - ~/.config/share/immich-db:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready --dbname='${POSTGRES_DB}' --username='${POSTGRES_USER}' || exit 1; Chksum="$$(psql --dbname='${POSTGRES_DB}' --username='${POSTGRES_USER}' --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command:
      [
        'postgres',
        '-c',
        'shared_preload_libraries=vectors.so',
        '-c',
        'search_path="$$user", public, vectors',
        '-c',
        'logging_collector=on',
        '-c',
        'max_wal_size=2GB',
        '-c',
        'shared_buffers=512MB',
        '-c',
        'wal_compression=on',
      ]
    restart: always


volumes:
  model-cache:
